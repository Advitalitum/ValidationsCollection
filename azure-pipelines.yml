trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- script: dotnet build --configuration Debug
  displayName: 'Build Debug'

- script: dotnet build --configuration Release
  displayName: 'Build Release'

- script: dotnet test --logger trx --framework netcoreapp2.2
- task: PublishTestResults@2
  displayName: 'Test NetCore 2.2'
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- script: dotnet test --logger trx --framework net45
- task: PublishTestResults@2
  displayName: 'Test NetFramework'
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- script: dotnet test --logger trx --framework netcoreapp2.2
- task: PublishTestResults@2
  displayName: 'Test NetCore 3.0'
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
- script: dotnet pack --configuration Release # --include-symbols
  displayName: 'Pack'
- script: dotnet nuget push **/*.nupkg -k $(NuGetApiKey) -s https://api.nuget.org/v3/index.json -n true
  displayName: 'NuGet publish'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
